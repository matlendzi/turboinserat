services:
  backend:
    build: ./backend
    container_name: backend
    restart: always
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - mongo
    networks:
      - proxy

  frontend:
    build:
      context: ./frontend
      args:
        - BUILD_MODE=${BUILD_MODE:-production}
    container_name: frontend
    restart: always
    env_file:
      - ./frontend/.env.${BUILD_MODE:-production}
    networks:
      - proxy
    environment:
      - NODE_ENV=${BUILD_MODE:-production}

  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    volumes:
      - ./mongodb_data:/data/db
    networks:
      - proxy

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: always
    env_file:
      - .env
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./uploads:/uploads:ro
      - caddy_data:/data
      - caddy_config:/config
      - ./logs/caddy:/var/log/caddy
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - proxy

networks:
  proxy:
    name: proxy
    driver: bridge
    attachable: true

volumes:
  caddy_data:
  caddy_config:
